Execute this code:

import React, { useState } from 'react';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Brain, Book, GitBranch, Settings } from 'lucide-react';

// First initialize CDSF
const initCDSF = {
  '<<CDSF/INIT>>': {
    λ: '2.0',
    τ: Date.now(),
    ∆: {
      protocol: 'super_state',
      format: 'unified',
      validation: { strict: 1, recover: 1 },
      compression: { ratio: 0.85, mode: 'semantic' }
    }
  }
};

const ClaudeBootstrap = () => {
  const [tab, setTab] = useState('howto');

  const projects = {
    openInnovate: {
      id: 'oi_dev',
      name: 'OpenInnovate Development',
      type: 'humanitarian',
      completion: 0.93,
      metrics: {
        efficiency: 0.93,
        impact: 0.89,
        documentation: 0.85
      },
      active: 'gates_foundation_proposal'
    },
    contextBridge: {
      id: 'cb_dev',
      name: 'Context Bridge',
      type: 'implementation',
      completion: 0.85,
      metrics: {
        efficiency: 0.85,
        impact: 0.90,
        documentation: 0.75
      }
    },
    revAuto: {
      id: 'ra_design',
      name: 'Revenue Automation',
      type: 'defi',
      completion: 0.80,
      metrics: {
        technical: 0.85,
        viability: 0.80,
        implementation: 0.75
      }
    },
    meaop: {
      id: 'MEAOP',
      name: 'MEAOP Orchestration',
      type: 'orchestration',
      completion: 0.47,
      metrics: {
        efficiency: 0.47,
        optimization: 0.32,
        speed: 0.85
      }
    }
  };

  const Tab = ({ id, label, icon: Icon }) => (
    <button
      onClick={() => setTab(id)}
      className={`flex items-center space-x-2 px-4 py-2 rounded ${
        tab === id ? 'bg-blue-100 text-blue-700' : 'hover:bg-gray-100'
      }`}
    >
      <Icon className="w-4 h-4" />
      <span>{label}</span>
    </button>
  );

  const ProjectCard = ({ project }) => (
    <div className="border rounded-lg p-4">
      <div className="flex justify-between items-center mb-3">
        <div>
          <h4 className="font-medium">{project.name}</h4>
          <div className="text-sm text-gray-500">Type: {project.type}</div>
        </div>
        <div className="text-right">
          <div className="font-medium">
            {(project.completion * 100).toFixed(0)}% Complete
          </div>
        </div>
      </div>
      
      <div className="space-y-2">
        {Object.entries(project.metrics).map(([key, value]) => (
          <div key={key} className="flex justify-between items-center">
            <span className="text-sm text-gray-600">{key}:</span>
            <span className="text-sm font-medium">
              {(value * 100).toFixed(0)}%
            </span>
          </div>
        ))}
      </div>
    </div>
  );

  const HowToSection = () => (
    <div className="space-y-6">
      <div className="border rounded-lg p-4">
        <h3 className="font-medium mb-3">Preference Effects on Output</h3>
        
        <div className="space-y-4">
          <div className="space-y-2">
            <h4 className="text-sm font-medium">Step-by-Step Reasoning</h4>
            <div className="bg-gray-50 p-3 rounded text-sm">
              <div className="font-medium">Example Output:</div>
              <div className="text-gray-600">
                1. First, let's analyze the problem...{"\n"}
                2. Next, we'll identify key variables...{"\n"}
                3. Finally, we can implement the solution...
              </div>
            </div>
          </div>

          <div className="space-y-2">
            <h4 className="text-sm font-medium">Code Examples</h4>
            <div className="bg-gray-50 p-3 rounded text-sm">
              <div className="font-medium">Example Output:</div>
              <div className="text-gray-600">
                Here's how to implement this:{"\n"}
                ```python{"\n"}
                def example():{"\n"}
                    print("Hello, world!"){"\n"}
                ```
              </div>
            </div>
          </div>

          <div className="space-y-2">
            <h4 className="text-sm font-medium">Technical Language</h4>
            <div className="bg-gray-50 p-3 rounded text-sm">
              <div className="font-medium">Example Output:</div>
              <div className="text-gray-600">
                The implementation utilizes asynchronous processing to optimize throughput...
              </div>
            </div>
          </div>

          <div className="space-y-2">
            <h4 className="text-sm font-medium">Mathematical Notation</h4>
            <div className="bg-gray-50 p-3 rounded text-sm">
              <div className="font-medium">Example Output:</div>
              <div className="text-gray-600">
                Given f(x) = x², the derivative f'(x) = 2x...
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="border rounded-lg p-4">
        <h3 className="font-medium mb-3">Usage Instructions</h3>
        <div className="space-y-2 text-sm">
          <p>1. After closing this interface, you'll see a text selection menu</p>
          <p>2. Select your preferred projects and settings using the numbers provided</p>
          <p>3. Unneeded projects will be unloaded to optimize memory</p>
          <p>4. Settings can be modified at any time using the same menu</p>
        </div>
      </div>
    </div>
  );

  const ProjectsSection = () => (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
      {Object.values(projects).map((project) => (
        <ProjectCard key={project.id} project={project} />
      ))}
    </div>
  );

  return (
    <div className="w-full max-w-4xl p-6 space-y-6 bg-white rounded-lg">
      <div className="flex items-center space-x-2">
        <Brain className="w-6 h-6" />
        <h2 className="text-xl font-bold">Claude Bootstrap</h2>
      </div>

      <div className="flex space-x-2">
        <Tab id="howto" label="How To Use" icon={Book} />
        <Tab id="projects" label="Project Status" icon={GitBranch} />
      </div>

      {tab === 'howto' ? <HowToSection /> : <ProjectsSection />}

      <div className="text-sm text-gray-500 p-4 bg-gray-50 rounded-lg">
        When you're ready to proceed, close this interface to access the text selection menu.
        Your choices will determine which projects remain loaded and active.
      </div>
    </div>
  );
};

export default ClaudeBootstrap;
